import django.conf
import django.core
import django.db.models


# –µ—â–µ –æ–¥–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è
# –∫–æ—Ç–æ—Ä–∞—è —É–∂–µ —á–∞—Å—Ç—å –∫–æ—Ä–∞–±–ª—è
# –º–∏–≥—Ä–∞—Ü–∏–∏ —Ä—É–≥–∞—é—Ç—Å—è –µ—Å–ª–∏ —É–¥–∞–ª–∏—Ç—å üòá
def get_upload_to(instance, filename):
    return f"uploads/{instance.feedback.id}/{filename}"


class Feedback(django.db.models.Model):
    name = django.db.models.CharField(
        verbose_name="–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
        max_length=150,
        blank=True,
    )
    created_on = django.db.models.DateTimeField(auto_now_add=True)
    mail = django.db.models.EmailField(
        verbose_name="–ü–æ—á—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
    )
    status = django.db.models.CharField(
        max_length=8,
        choices=(
            ("NEW", "–ø–æ–ª—É—á–µ–Ω–æ"),
            ("PENDING", "–≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ"),
            ("COMPLETE", "–æ—Ç–≤–µ—Ç –¥–∞–Ω"),
        ),
        default="NEW",
    )

    def delete(self, *args, **kwargs):
        raise django.core.exceptions.PermissionDenied(
            "–£–¥–∞–ª–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤ —ç—Ç–æ–≥–æ —Ç–∏–ø–∞ –∑–∞–ø—Ä–µ—â–µ–Ω–æ.",
        )

    def has_delete_permission(self, request, obj=None):
        return False


class FeedbackText(django.db.models.Model):
    feedback = django.db.models.OneToOneField(
        Feedback,
        on_delete=django.db.models.PROTECT,
    )
    text = django.db.models.TextField(
        verbose_name="–ñ–∞–ª–æ–±–∞",
    )


class FeedbackFile(django.db.models.Model):
    feedback = django.db.models.ForeignKey(
        Feedback,
        on_delete=django.db.models.PROTECT,
    )

    def get_upload_path(self, filename):
        return f"uploads/{self.feedback_id}/{filename}"

    def upload_to(self, filename):
        return self.get_upload_path(filename)

    file = django.db.models.FileField(
        upload_to=upload_to,
        null=True,
        blank=True,
    )


class StatusLog(django.db.models.Model):
    user = django.db.models.ForeignKey(
        django.conf.settings.AUTH_USER_MODEL,
        on_delete=django.db.models.PROTECT,
        null=True,
    )
    timestamp = django.db.models.DateTimeField(auto_now_add=True)
    from_status = django.db.models.CharField(
        max_length=8,
        db_column="from",
    )
    to = django.db.models.CharField(
        max_length=8,
        db_column="to",
    )


def delete_feedback(sender, instance, **kwargs):
    instance.feedback.delete()


django.db.models.signals.post_delete.connect(delete_feedback, sender=Feedback)

__all__ = ()
